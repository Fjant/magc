<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/task   
    http://www.springframework.org/schema/task/spring-task.xsd    
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName" default-lazy-init="false">
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:memcached.properties</value>
				<value>classpath:communication.properties</value>
				<value>classpath:fileConfig.properties</value>
			</list>
		</property>
	</bean>
	<bean id="systemConfig" class="com.xincheng.config.SystemConfig"></bean>
	<bean id="fileConfig" class="com.xincheng.config.model.FileConfig">
		<property name="fileTempPath" value="${fileConfig.fileTempPath}" />
		<property name="fileUploadPath" value="${fileConfig.fileUploadPath}" />
		<property name="fileDownloadPath" value="${fileConfig.fileDownloadPath}" />
		<property name="fileVitualBaseUrl" value="${fileConfig.fileVitualBaseUrl}" />
		<property name="fileVitualBaseDownloadUrl" value="${fileConfig.fileVitualBaseDownloadUrl}" />
		<property name="fileVitualBaseUploadUrl" value="${fileConfig.fileVitualBaseUploadUrl}" />
	</bean>
	<bean id="sendEmail" class="com.xincheng.utils.SendEmail"></bean>
	<bean id="communication" class="com.xincheng.config.Communication">
		<property name="senderEmailTitle" value="${communication.senderEmailTitle}" />
		<property name="senderSmtpHost" value="${communication.senderSmtpHost}" />
		<property name="senderEmailName" value="${communication.senderEmailName}" />
		<property name="senderEmailPassWord" value="${communication.senderEmailPassWord}" />
		<property name="notifierEmail" value="${communication.notifierEmail}" />
	</bean>
	<!-- Memcached配置 -->
	<bean id="memcachedPool" class="com.danga.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<property name="servers">
			<list>
				<value>${memcached.server}</value>
			</list>
		</property>
		<property name="initConn">
			<value>${memcached.initConn}</value>
		</property>
		<property name="minConn">
			<value>${memcached.minConn}</value>
		</property>
		<property name="maxConn">
			<value>${memcached.maxConn}</value>
		</property>
		<property name="maintSleep">
			<value>${memcached.maintSleep}</value>
		</property>
		<property name="nagle">
			<value>${memcached.nagle}</value>
		</property>
		<property name="socketTO">
			<value>${memcached.socketTO}</value>
		</property>
	</bean>
	<bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />
	<bean id="springUtils" class="com.xincheng.utils.SpringUtils" />
	<!-- component-scan自动搜索@Component , @Controller , @Service , @Repository等标注的类 -->
	<!-- 默认值如果适合，该项可以不用修改 -->
	<context:component-scan base-package="com.**.service" />
	<context:component-scan base-package="com.**.plugins.**" />
	<context:component-scan base-package="com.**.rs" />
	<context:component-scan base-package="com.**.httpProxy" />
</beans>
